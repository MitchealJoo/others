{
	"id": "b1a08375c2c5ad3304fc27f243290a09",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ErrorHandling.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ncontract ErrorHandling{\n\n    function requireTest(uint i) public pure {\n        require(i<=10, \"i>10\");\n    }\n\n    function revertTest(uint i) public pure {\n        if(i > 10){\n            revert(\"i>10\");\n        }\n    }\n\n    uint num = 111;\n    function assertTest() public view {\n        assert(num == 111);\n    }\n\n    error myError(address caller, uint i);\n    function myErrorTest(uint i) public view {\n        if(i > 10){\n            revert myError(msg.sender, i);\n        }\n    }\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ErrorHandling.sol": {
				"ErrorHandling": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "myError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "assertTest",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "myErrorTest",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "requireTest",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "revertTest",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ErrorHandling.sol\":56:543  contract ErrorHandling{... */\n  mstore(0x40, 0x80)\n    /* \"ErrorHandling.sol\":293:296  111 */\n  0x6f\n    /* \"ErrorHandling.sol\":282:296  uint num = 111 */\n  0x00\n  sstore\n    /* \"ErrorHandling.sol\":56:543  contract ErrorHandling{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ErrorHandling.sol\":56:543  contract ErrorHandling{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x148b677f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1af887f7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6f9cb44a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b8fce76\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ErrorHandling.sol\":85:165  function requireTest(uint i) public pure {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"ErrorHandling.sol\":171:276  function revertTest(uint i) public pure {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"ErrorHandling.sol\":420:541  function myErrorTest(uint i) public view {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"ErrorHandling.sol\":302:371  function assertTest() public view {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"ErrorHandling.sol\":85:165  function requireTest(uint i) public pure {... */\n    tag_10:\n        /* \"ErrorHandling.sol\":147:149  10 */\n      0x0a\n        /* \"ErrorHandling.sol\":144:145  i */\n      dup2\n        /* \"ErrorHandling.sol\":144:149  i<=10 */\n      gt\n      iszero\n        /* \"ErrorHandling.sol\":136:158  require(i<=10, \"i>10\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"ErrorHandling.sol\":85:165  function requireTest(uint i) public pure {... */\n      pop\n      jump\t// out\n        /* \"ErrorHandling.sol\":171:276  function revertTest(uint i) public pure {... */\n    tag_13:\n        /* \"ErrorHandling.sol\":228:230  10 */\n      0x0a\n        /* \"ErrorHandling.sol\":224:225  i */\n      dup2\n        /* \"ErrorHandling.sol\":224:230  i > 10 */\n      gt\n        /* \"ErrorHandling.sol\":221:270  if(i > 10){... */\n      iszero\n      tag_24\n      jumpi\n        /* \"ErrorHandling.sol\":245:259  revert(\"i>10\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_22\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ErrorHandling.sol\":221:270  if(i > 10){... */\n    tag_24:\n        /* \"ErrorHandling.sol\":171:276  function revertTest(uint i) public pure {... */\n      pop\n      jump\t// out\n        /* \"ErrorHandling.sol\":420:541  function myErrorTest(uint i) public view {... */\n    tag_16:\n        /* \"ErrorHandling.sol\":478:480  10 */\n      0x0a\n        /* \"ErrorHandling.sol\":474:475  i */\n      dup2\n        /* \"ErrorHandling.sol\":474:480  i > 10 */\n      gt\n        /* \"ErrorHandling.sol\":471:535  if(i > 10){... */\n      iszero\n      tag_27\n      jumpi\n        /* \"ErrorHandling.sol\":510:520  msg.sender */\n      caller\n        /* \"ErrorHandling.sol\":522:523  i */\n      dup2\n        /* \"ErrorHandling.sol\":502:524  myError(msg.sender, i) */\n      mload(0x40)\n      0xa6e8950f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ErrorHandling.sol\":471:535  if(i > 10){... */\n    tag_27:\n        /* \"ErrorHandling.sol\":420:541  function myErrorTest(uint i) public view {... */\n      pop\n      jump\t// out\n        /* \"ErrorHandling.sol\":302:371  function assertTest() public view {... */\n    tag_18:\n        /* \"ErrorHandling.sol\":360:363  111 */\n      0x6f\n        /* \"ErrorHandling.sol\":353:356  num */\n      sload(0x00)\n        /* \"ErrorHandling.sol\":353:363  num == 111 */\n      eq\n        /* \"ErrorHandling.sol\":346:364  assert(num == 111) */\n      tag_31\n      jumpi\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n    tag_31:\n        /* \"ErrorHandling.sol\":302:371  function assertTest() public view {... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_35:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_37\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_9:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":228:347   */\n    tag_40:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_43\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_35\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_44:\n        /* \"#utility.yul\":574:598   */\n      tag_46\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:976   */\n    tag_48:\n        /* \"#utility.yul\":753:756   */\n      0x00\n        /* \"#utility.yul\":774:840   */\n      tag_50\n        /* \"#utility.yul\":838:839   */\n      0x04\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":774:840   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":767:840   */\n      swap2\n      pop\n        /* \"#utility.yul\":849:942   */\n      tag_52\n        /* \"#utility.yul\":938:941   */\n      dup3\n        /* \"#utility.yul\":849:942   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":967:969   */\n      0x20\n        /* \"#utility.yul\":962:965   */\n      dup3\n        /* \"#utility.yul\":958:970   */\n      add\n        /* \"#utility.yul\":951:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":611:976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":982:1100   */\n    tag_54:\n        /* \"#utility.yul\":1069:1093   */\n      tag_56\n        /* \"#utility.yul\":1087:1092   */\n      dup2\n        /* \"#utility.yul\":1069:1093   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1064:1067   */\n      dup3\n        /* \"#utility.yul\":1057:1094   */\n      mstore\n        /* \"#utility.yul\":982:1100   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1106:1438   */\n    tag_29:\n        /* \"#utility.yul\":1227:1231   */\n      0x00\n        /* \"#utility.yul\":1265:1267   */\n      0x40\n        /* \"#utility.yul\":1254:1263   */\n      dup3\n        /* \"#utility.yul\":1250:1268   */\n      add\n        /* \"#utility.yul\":1242:1268   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1349   */\n      tag_59\n        /* \"#utility.yul\":1346:1347   */\n      0x00\n        /* \"#utility.yul\":1335:1344   */\n      dup4\n        /* \"#utility.yul\":1331:1348   */\n      add\n        /* \"#utility.yul\":1322:1328   */\n      dup6\n        /* \"#utility.yul\":1278:1349   */\n      tag_44\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1359:1431   */\n      tag_60\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup4\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1403:1409   */\n      dup5\n        /* \"#utility.yul\":1359:1431   */\n      tag_54\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1106:1438   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1444:1863   */\n    tag_22:\n        /* \"#utility.yul\":1610:1614   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x20\n        /* \"#utility.yul\":1637:1646   */\n      dup3\n        /* \"#utility.yul\":1633:1651   */\n      add\n        /* \"#utility.yul\":1625:1651   */\n      swap1\n      pop\n        /* \"#utility.yul\":1697:1706   */\n      dup2\n        /* \"#utility.yul\":1691:1695   */\n      dup2\n        /* \"#utility.yul\":1687:1707   */\n      sub\n        /* \"#utility.yul\":1683:1684   */\n      0x00\n        /* \"#utility.yul\":1672:1681   */\n      dup4\n        /* \"#utility.yul\":1668:1685   */\n      add\n        /* \"#utility.yul\":1661:1708   */\n      mstore\n        /* \"#utility.yul\":1725:1856   */\n      tag_62\n        /* \"#utility.yul\":1851:1855   */\n      dup2\n        /* \"#utility.yul\":1725:1856   */\n      tag_48\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1717:1856   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1950:2119   */\n    tag_51:\n        /* \"#utility.yul\":2034:2045   */\n      0x00\n        /* \"#utility.yul\":2068:2074   */\n      dup3\n        /* \"#utility.yul\":2063:2066   */\n      dup3\n        /* \"#utility.yul\":2056:2075   */\n      mstore\n        /* \"#utility.yul\":2108:2112   */\n      0x20\n        /* \"#utility.yul\":2103:2106   */\n      dup3\n        /* \"#utility.yul\":2099:2113   */\n      add\n        /* \"#utility.yul\":2084:2113   */\n      swap1\n      pop\n        /* \"#utility.yul\":1950:2119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2125:2221   */\n    tag_47:\n        /* \"#utility.yul\":2162:2169   */\n      0x00\n        /* \"#utility.yul\":2191:2215   */\n      tag_67\n        /* \"#utility.yul\":2209:2214   */\n      dup3\n        /* \"#utility.yul\":2191:2215   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2180:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":2125:2221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2227:2353   */\n    tag_68:\n        /* \"#utility.yul\":2264:2271   */\n      0x00\n        /* \"#utility.yul\":2304:2346   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2297:2302   */\n      dup3\n        /* \"#utility.yul\":2293:2347   */\n      and\n        /* \"#utility.yul\":2282:2347   */\n      swap1\n      pop\n        /* \"#utility.yul\":2227:2353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2436   */\n    tag_57:\n        /* \"#utility.yul\":2396:2403   */\n      0x00\n        /* \"#utility.yul\":2425:2430   */\n      dup2\n        /* \"#utility.yul\":2414:2430   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2622   */\n    tag_33:\n        /* \"#utility.yul\":2490:2567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2487:2488   */\n      0x00\n        /* \"#utility.yul\":2480:2568   */\n      mstore\n        /* \"#utility.yul\":2587:2591   */\n      0x01\n        /* \"#utility.yul\":2584:2585   */\n      0x04\n        /* \"#utility.yul\":2577:2592   */\n      mstore\n        /* \"#utility.yul\":2611:2615   */\n      0x24\n        /* \"#utility.yul\":2608:2609   */\n      0x00\n        /* \"#utility.yul\":2601:2616   */\n      revert\n        /* \"#utility.yul\":2751:2868   */\n    tag_42:\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2857:2858   */\n      dup1\n        /* \"#utility.yul\":2850:2862   */\n      revert\n        /* \"#utility.yul\":2874:3028   */\n    tag_53:\n        /* \"#utility.yul\":3014:3020   */\n      0x693e313000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3010:3011   */\n      0x00\n        /* \"#utility.yul\":3002:3008   */\n      dup3\n        /* \"#utility.yul\":2998:3012   */\n      add\n        /* \"#utility.yul\":2991:3021   */\n      mstore\n        /* \"#utility.yul\":2874:3028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3034:3156   */\n    tag_38:\n        /* \"#utility.yul\":3107:3131   */\n      tag_77\n        /* \"#utility.yul\":3125:3130   */\n      dup2\n        /* \"#utility.yul\":3107:3131   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":3100:3105   */\n      dup2\n        /* \"#utility.yul\":3097:3132   */\n      eq\n        /* \"#utility.yul\":3087:3150   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3146:3147   */\n      0x00\n        /* \"#utility.yul\":3143:3144   */\n      dup1\n        /* \"#utility.yul\":3136:3148   */\n      revert\n        /* \"#utility.yul\":3087:3150   */\n    tag_78:\n        /* \"#utility.yul\":3034:3156   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209d6d649418d370a626261b1e0682fc8c5e6e325919c3988d449f85991c12755564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052606f60005534801561001557600080fd5b50610360806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063148b677f146100515780631af887f71461006d5780636f9cb44a146100895780637b8fce76146100a5575b600080fd5b61006b600480360381019061006691906101b2565b6100af565b005b610087600480360381019061008291906101b2565b6100f6565b005b6100a3600480360381019061009e91906101b2565b61013d565b005b6100ad610188565b005b600a8111156100f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ea90610249565b60405180910390fd5b50565b600a81111561013a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013190610249565b60405180910390fd5b50565b600a8111156101855733816040517fa6e8950f00000000000000000000000000000000000000000000000000000000815260040161017c929190610220565b60405180910390fd5b50565b606f6000541461019b5761019a6102b6565b5b565b6000813590506101ac81610313565b92915050565b6000602082840312156101c8576101c76102e5565b5b60006101d68482850161019d565b91505092915050565b6101e88161027a565b82525050565b60006101fb600483610269565b9150610206826102ea565b602082019050919050565b61021a816102ac565b82525050565b600060408201905061023560008301856101df565b6102426020830184610211565b9392505050565b60006020820190508181036000830152610262816101ee565b9050919050565b600082825260208201905092915050565b60006102858261028c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600080fd5b7f693e313000000000000000000000000000000000000000000000000000000000600082015250565b61031c816102ac565b811461032757600080fd5b5056fea26469706673582212209d6d649418d370a626261b1e0682fc8c5e6e325919c3988d449f85991c12755564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x6F PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x148B677F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1AF887F7 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x6F9CB44A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x7B8FCE76 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAD PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x13A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131 SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x185 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0xA6E8950F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C SWAP3 SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x6F PUSH1 0x0 SLOAD EQ PUSH2 0x19B JUMPI PUSH2 0x19A PUSH2 0x2B6 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC DUP2 PUSH2 0x313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C7 PUSH2 0x2E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP5 DUP3 DUP6 ADD PUSH2 0x19D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E8 DUP2 PUSH2 0x27A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB PUSH1 0x4 DUP4 PUSH2 0x269 JUMP JUMPDEST SWAP2 POP PUSH2 0x206 DUP3 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A DUP2 PUSH2 0x2AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF JUMP JUMPDEST PUSH2 0x242 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x211 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x262 DUP2 PUSH2 0x1EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP3 PUSH2 0x28C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x693E313000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x31C DUP2 PUSH2 0x2AC JUMP JUMPDEST DUP2 EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH14 0x649418D370A626261B1E0682FC8C 0x5E PUSH15 0x325919C3988D449F85991C12755564 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "56:487:0:-:0;;;293:3;282:14;;56:487;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@assertTest_42": {
									"entryPoint": 392,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@myErrorTest_65": {
									"entryPoint": 317,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@requireTest_14": {
									"entryPoint": 175,
									"id": 14,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revertTest_29": {
									"entryPoint": 246,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3159:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:219:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:1:1",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "774:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2",
																	"nodeType": "YulIdentifier",
																	"src": "849:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "849:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "962:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "967:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "951:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "753:3:1",
														"type": ""
													}
												],
												"src": "611:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1047:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1064:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1087:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1069:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1069:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1057:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1042:3:1",
														"type": ""
													}
												],
												"src": "982:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1232:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1242:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1254:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1265:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1250:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1250:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1242:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1335:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1346:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1331:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1278:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1278:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1403:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1416:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1427:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1412:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1359:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1196:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1208:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1216:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1227:4:1",
														"type": ""
													}
												],
												"src": "1106:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1625:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1637:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1625:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1672:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1683:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1668:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1691:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1697:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1687:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1717:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1851:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1725:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1717:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1595:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1610:4:1",
														"type": ""
													}
												],
												"src": "1444:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1909:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1919:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1929:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1919:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1902:6:1",
														"type": ""
													}
												],
												"src": "1869:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2046:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2063:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2068:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2084:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2103:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2099:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2084:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2018:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2023:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2034:11:1",
														"type": ""
													}
												],
												"src": "1950:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2170:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2180:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2209:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2191:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2180:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2152:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2162:7:1",
														"type": ""
													}
												],
												"src": "2125:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2297:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2282:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2254:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2264:7:1",
														"type": ""
													}
												],
												"src": "2227:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2396:7:1",
														"type": ""
													}
												],
												"src": "2359:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2587:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2577:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2601:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "2442:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2717:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2734:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2737:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2727:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2727:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2628:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2840:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2860:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2850:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2751:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2980:48:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2998:14:1"
																	},
																	{
																		"hexValue": "693e3130",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3014:6:1",
																		"type": "",
																		"value": "i>10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2991:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2972:6:1",
														"type": ""
													}
												],
												"src": "2874:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3077:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3134:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3143:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3146:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3136:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3136:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3136:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3100:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3125:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3107:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3107:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3097:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3097:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:43:1"
															},
															"nodeType": "YulIf",
															"src": "3087:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3070:5:1",
														"type": ""
													}
												],
												"src": "3034:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"i>10\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063148b677f146100515780631af887f71461006d5780636f9cb44a146100895780637b8fce76146100a5575b600080fd5b61006b600480360381019061006691906101b2565b6100af565b005b610087600480360381019061008291906101b2565b6100f6565b005b6100a3600480360381019061009e91906101b2565b61013d565b005b6100ad610188565b005b600a8111156100f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ea90610249565b60405180910390fd5b50565b600a81111561013a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013190610249565b60405180910390fd5b50565b600a8111156101855733816040517fa6e8950f00000000000000000000000000000000000000000000000000000000815260040161017c929190610220565b60405180910390fd5b50565b606f6000541461019b5761019a6102b6565b5b565b6000813590506101ac81610313565b92915050565b6000602082840312156101c8576101c76102e5565b5b60006101d68482850161019d565b91505092915050565b6101e88161027a565b82525050565b60006101fb600483610269565b9150610206826102ea565b602082019050919050565b61021a816102ac565b82525050565b600060408201905061023560008301856101df565b6102426020830184610211565b9392505050565b60006020820190508181036000830152610262816101ee565b9050919050565b600082825260208201905092915050565b60006102858261028c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600080fd5b7f693e313000000000000000000000000000000000000000000000000000000000600082015250565b61031c816102ac565b811461032757600080fd5b5056fea26469706673582212209d6d649418d370a626261b1e0682fc8c5e6e325919c3988d449f85991c12755564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x148B677F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1AF887F7 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x6F9CB44A EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x7B8FCE76 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0xF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAD PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x13A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131 SWAP1 PUSH2 0x249 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x185 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0xA6E8950F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C SWAP3 SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x6F PUSH1 0x0 SLOAD EQ PUSH2 0x19B JUMPI PUSH2 0x19A PUSH2 0x2B6 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC DUP2 PUSH2 0x313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C7 PUSH2 0x2E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6 DUP5 DUP3 DUP6 ADD PUSH2 0x19D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E8 DUP2 PUSH2 0x27A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB PUSH1 0x4 DUP4 PUSH2 0x269 JUMP JUMPDEST SWAP2 POP PUSH2 0x206 DUP3 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A DUP2 PUSH2 0x2AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF JUMP JUMPDEST PUSH2 0x242 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x211 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x262 DUP2 PUSH2 0x1EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP3 PUSH2 0x28C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x693E313000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x31C DUP2 PUSH2 0x2AC JUMP JUMPDEST DUP2 EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH14 0x649418D370A626261B1E0682FC8C 0x5E PUSH15 0x325919C3988D449F85991C12755564 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "56:487:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:80;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;171:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;420:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;302:69;;;:::i;:::-;;85:80;147:2;144:1;:5;;136:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;85:80;:::o;171:105::-;228:2;224:1;:6;221:49;;;245:14;;;;;;;;;;:::i;:::-;;;;;;;;221:49;171:105;:::o;420:121::-;478:2;474:1;:6;471:64;;;510:10;522:1;502:22;;;;;;;;;;;;:::i;:::-;;;;;;;;471:64;420:121;:::o;302:69::-;360:3;353;;:10;346:18;;;;:::i;:::-;;302:69::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:365::-;753:3;774:66;838:1;833:3;774:66;:::i;:::-;767:73;;849:93;938:3;849:93;:::i;:::-;967:2;962:3;958:12;951:19;;611:365;;;:::o;982:118::-;1069:24;1087:5;1069:24;:::i;:::-;1064:3;1057:37;982:118;;:::o;1106:332::-;1227:4;1265:2;1254:9;1250:18;1242:26;;1278:71;1346:1;1335:9;1331:17;1322:6;1278:71;:::i;:::-;1359:72;1427:2;1416:9;1412:18;1403:6;1359:72;:::i;:::-;1106:332;;;;;:::o;1444:419::-;1610:4;1648:2;1637:9;1633:18;1625:26;;1697:9;1691:4;1687:20;1683:1;1672:9;1668:17;1661:47;1725:131;1851:4;1725:131;:::i;:::-;1717:139;;1444:419;;;:::o;1950:169::-;2034:11;2068:6;2063:3;2056:19;2108:4;2103:3;2099:14;2084:29;;1950:169;;;;:::o;2125:96::-;2162:7;2191:24;2209:5;2191:24;:::i;:::-;2180:35;;2125:96;;;:::o;2227:126::-;2264:7;2304:42;2297:5;2293:54;2282:65;;2227:126;;;:::o;2359:77::-;2396:7;2425:5;2414:16;;2359:77;;;:::o;2442:180::-;2490:77;2487:1;2480:88;2587:4;2584:1;2577:15;2611:4;2608:1;2601:15;2751:117;2860:1;2857;2850:12;2874:154;3014:6;3010:1;3002:6;2998:14;2991:30;2874:154;:::o;3034:122::-;3107:24;3125:5;3107:24;:::i;:::-;3100:5;3097:35;3087:63;;3146:1;3143;3136:12;3087:63;3034:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "172800",
								"executionCost": "22320",
								"totalCost": "195120"
							},
							"external": {
								"assertTest()": "2340",
								"myErrorTest(uint256)": "infinite",
								"requireTest(uint256)": "697",
								"revertTest(uint256)": "719"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 293,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "6F"
								},
								{
									"begin": 282,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 296,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 543,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d6d649418d370a626261b1e0682fc8c5e6e325919c3988d449f85991c12755564736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "148B677F"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "1AF887F7"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "6F9CB44A"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "7B8FCE76"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 302,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 302,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 302,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 302,
											"end": 371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 302,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 302,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 371,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 85,
											"end": 165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 147,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 144,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 144,
											"end": 149,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 136,
											"end": 158,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 136,
											"end": 158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 165,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 171,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 224,
											"end": 225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 224,
											"end": 230,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 270,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 221,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 221,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 221,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 276,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 420,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 474,
											"end": 475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 480,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 471,
											"end": 535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 471,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 471,
											"end": 535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 520,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 522,
											"end": 523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "A6E8950F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 471,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 471,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 302,
											"end": 371,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 302,
											"end": 371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "6F"
										},
										{
											"begin": 353,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 611,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 838,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 774,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 774,
											"end": 840,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 840,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 774,
											"end": 840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 767,
											"end": 840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 849,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 849,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 849,
											"end": 942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 849,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 967,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 958,
											"end": 970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 951,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 951,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 611,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 982,
											"end": 1100,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 982,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1069,
											"end": 1093,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1069,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1069,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1057,
											"end": 1094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1100,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1278,
											"end": 1349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1278,
											"end": 1349,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1278,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1409,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1431,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1359,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1438,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1444,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1444,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1637,
											"end": 1646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1851,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1725,
											"end": 1856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1725,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1863,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1950,
											"end": 2119,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1950,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2119,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2125,
											"end": 2221,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2125,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2221,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2227,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2227,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2347,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2622,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2442,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2584,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2751,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 3028,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2874,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "PUSH",
											"source": 1,
											"value": "693E313000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 3028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 3028,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3034,
											"end": 3156,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3034,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3107,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3132,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3087,
											"end": 3150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3150,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3087,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"assertTest()": "7b8fce76",
							"myErrorTest(uint256)": "6f9cb44a",
							"requireTest(uint256)": "148b677f",
							"revertTest(uint256)": "1af887f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"myError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"assertTest\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"myErrorTest\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"requireTest\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"revertTest\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ErrorHandling.sol\":\"ErrorHandling\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ErrorHandling.sol\":{\"keccak256\":\"0xefb34eb448472b72f3180eac3669ecfe01794bd259ec755227cd3263668c1272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6633c9a088dc0d6c268ef887c87f1cc2a7471898f0a2ebd216cde4a7796f003b\",\"dweb:/ipfs/QmZ262JkRTo1td7GTfiRa5Afx5a1wHW5m7E4wo2Cod527w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 32,
								"contract": "ErrorHandling.sol:ErrorHandling",
								"label": "num",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ErrorHandling.sol": {
				"ast": {
					"absolutePath": "ErrorHandling.sol",
					"exportedSymbols": {
						"ErrorHandling": [
							66
						]
					},
					"id": 67,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "ErrorHandling",
							"nameLocation": "65:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "126:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 7,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "144:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "147:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "144:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "693e3130",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "151:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2",
																"typeString": "literal_string \"i>10\""
															},
															"value": "i>10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2",
																"typeString": "literal_string \"i>10\""
															}
														],
														"id": 6,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "136:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "136:22:0"
											}
										]
									},
									"functionSelector": "148b677f",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requireTest",
									"nameLocation": "94:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "111:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "106:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:8:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:0"
									},
									"scope": 66,
									"src": "85:80:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "211:65:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 19,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "228:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "224:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "IfStatement",
												"src": "221:49:0",
												"trueBody": {
													"id": 26,
													"nodeType": "Block",
													"src": "231:39:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "693e3130",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "252:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2",
																			"typeString": "literal_string \"i>10\""
																		},
																		"value": "i>10"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_89e168043e7e33e90f5212c2b956ccdd9d746785c9867ec357b3a92210dad8d2",
																			"typeString": "literal_string \"i>10\""
																		}
																	],
																	"id": 22,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "245:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "245:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 25,
															"nodeType": "ExpressionStatement",
															"src": "245:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1af887f7",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertTest",
									"nameLocation": "180:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "196:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "191:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "190:8:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:0:0"
									},
									"scope": 66,
									"src": "171:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "num",
									"nameLocation": "287:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "282:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "282:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313131",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "293:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_111_by_1",
											"typeString": "int_const 111"
										},
										"value": "111"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "336:35:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 36,
																"name": "num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "353:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "313131",
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "360:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_111_by_1",
																	"typeString": "int_const 111"
																},
																"value": "111"
															},
															"src": "353:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "346:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "346:18:0"
											}
										]
									},
									"functionSelector": "7b8fce76",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assertTest",
									"nameLocation": "311:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:0:0"
									},
									"scope": 66,
									"src": "302:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"id": 48,
									"name": "myError",
									"nameLocation": "383:7:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "399:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "391:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "412:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "407:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:24:0"
									},
									"src": "377:38:0"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "461:80:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "478:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "474:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "IfStatement",
												"src": "471:64:0",
												"trueBody": {
													"id": 62,
													"nodeType": "Block",
													"src": "481:54:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 57,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "510:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "510:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 59,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "522:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 56,
																	"name": "myError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "502:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "502:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 61,
															"nodeType": "RevertStatement",
															"src": "495:29:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6f9cb44a",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myErrorTest",
									"nameLocation": "429:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "446:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "441:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:8:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:0:0"
									},
									"scope": 66,
									"src": "420:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 67,
							"src": "56:487:0",
							"usedErrors": [
								48
							]
						}
					],
					"src": "32:513:0"
				},
				"id": 0
			}
		}
	}
}