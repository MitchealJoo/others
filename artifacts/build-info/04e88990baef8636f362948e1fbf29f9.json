{
	"id": "04e88990baef8636f362948e1fbf29f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"PayableExample.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ncontract PayableExample {\n    address payable recipient;\n    constructor() {\n        recipient = payable(msg.sender);\n    }\n    \n    function receiveEther() external payable {}\n\n    //查询余额\n    function queryBalance() external view returns(uint){\n        return address(this).balance;\n    }\n\n    // 处理接收以太币的函数（无数据的交易）\n    receive() external payable {\n        // 这里可以添加处理逻辑，例如：\n        // recipient.transfer(msg.value); // 将收到的以太币转给 recipient\n    }\n\n    // 处理接收以太币的函数（有数据的交易）\n    fallback() external payable {\n        // 这里可以添加处理逻辑，例如记录日志\n        // 但通常 fallback() 函数不应接收以太币，如果有数据传入时应当调用\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"PayableExample.sol": {
				"PayableExample": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "queryBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveEther",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PayableExample.sol\":56:859  contract PayableExample {... */\n  mstore(0x40, 0x80)\n    /* \"PayableExample.sol\":117:179  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"PayableExample.sol\":161:171  msg.sender */\n  caller\n    /* \"PayableExample.sol\":141:150  recipient */\n  0x00\n  dup1\n    /* \"PayableExample.sol\":141:172  recipient = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PayableExample.sol\":56:859  contract PayableExample {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PayableExample.sol\":56:859  contract PayableExample {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x36f40c61\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa3912ec8\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"PayableExample.sol\":257:353  function queryBalance() external view returns(uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PayableExample.sol\":189:232  function receiveEther() external payable {} */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"PayableExample.sol\":257:353  function queryBalance() external view returns(uint){... */\n    tag_11:\n        /* \"PayableExample.sol\":303:307  uint */\n      0x00\n        /* \"PayableExample.sol\":325:346  address(this).balance */\n      selfbalance\n        /* \"PayableExample.sol\":318:346  return address(this).balance */\n      swap1\n      pop\n        /* \"PayableExample.sol\":257:353  function queryBalance() external view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"PayableExample.sol\":189:232  function receiveEther() external payable {} */\n    tag_15:\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_19:\n        /* \"#utility.yul\":94:118   */\n      tag_21\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_13:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_24\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_19\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_22:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206ab0ed2be24965101106f859b9086bec562ffb1dc1de2f721661e50b29d7ce3364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060cf8061005f6000396000f3fe60806040526004361060295760003560e01c806336f40c61146031578063a3912ec814605757602f565b36602f57005b005b348015603c57600080fd5b506043605f565b604051604e91906076565b60405180910390f35b605d6067565b005b600047905090565b565b607081608f565b82525050565b6000602082019050608960008301846069565b92915050565b600081905091905056fea26469706673582212206ab0ed2be24965101106f859b9086bec562ffb1dc1de2f721661e50b29d7ce3364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xCF DUP1 PUSH2 0x5F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x36F40C61 EQ PUSH1 0x31 JUMPI DUP1 PUSH4 0xA3912EC8 EQ PUSH1 0x57 JUMPI PUSH1 0x2F JUMP JUMPDEST CALLDATASIZE PUSH1 0x2F JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x43 PUSH1 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4E SWAP2 SWAP1 PUSH1 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5D PUSH1 0x67 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x70 DUP2 PUSH1 0x8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x89 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xB0ED2BE24965101106F859 0xB9 ADDMOD PUSH12 0xEC562FFB1DC1DE2F721661E5 SIGNEXTEND 0x29 0xD7 0xCE CALLER PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:803:0:-:0;;;117:62;;;;;;;;;;161:10;141:9;;:31;;;;;;;;;;;;;;;;;;56:803;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_39": {
									"entryPoint": null,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@queryBalance_31": {
									"entryPoint": 95,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@receiveEther_19": {
									"entryPoint": 103,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361060295760003560e01c806336f40c61146031578063a3912ec814605757602f565b36602f57005b005b348015603c57600080fd5b506043605f565b604051604e91906076565b60405180910390f35b605d6067565b005b600047905090565b565b607081608f565b82525050565b6000602082019050608960008301846069565b92915050565b600081905091905056fea26469706673582212206ab0ed2be24965101106f859b9086bec562ffb1dc1de2f721661e50b29d7ce3364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x36F40C61 EQ PUSH1 0x31 JUMPI DUP1 PUSH4 0xA3912EC8 EQ PUSH1 0x57 JUMPI PUSH1 0x2F JUMP JUMPDEST CALLDATASIZE PUSH1 0x2F JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x43 PUSH1 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4E SWAP2 SWAP1 PUSH1 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5D PUSH1 0x67 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x70 DUP2 PUSH1 0x8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x89 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xB0ED2BE24965101106F859 0xB9 ADDMOD PUSH12 0xEC562FFB1DC1DE2F721661E5 SIGNEXTEND 0x29 0xD7 0xCE CALLER PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:803:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189:43;;;:::i;:::-;;257:96;303:4;325:21;318:28;;257:96;:::o;189:43::-;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "41400",
								"executionCost": "24359",
								"totalCost": "65759"
							},
							"external": {
								"": "107",
								"queryBalance()": "317",
								"receiveEther()": "120"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 859,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 859,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 179,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 179,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 179,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 117,
									"end": 179,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 161,
									"end": 171,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 141,
									"end": 150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 141,
									"end": 172,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 141,
									"end": 172,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 141,
									"end": 172,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 141,
									"end": 172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 859,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 859,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 859,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 859,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ab0ed2be24965101106f859b9086bec562ffb1dc1de2f721661e50b29d7ce3364736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "36F40C61"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "A3912EC8"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 189,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 189,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 189,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 189,
											"end": 232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 189,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 189,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 232,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 346,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 353,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 189,
											"end": 232,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 189,
											"end": 232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 232,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"queryBalance()": "36f40c61",
							"receiveEther()": "a3912ec8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"queryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PayableExample.sol\":\"PayableExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PayableExample.sol\":{\"keccak256\":\"0xf373253476a685aea9ca3a58de0b123a70cc70df5f9b5dc116c87e3ed22da559\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a23f4389e071c6d97628be046b9336286ad94a1a6042e9809c9e4d700a4f484\",\"dweb:/ipfs/QmUruQWtH5G8SqcLeTG6SofchGYfsj84trWXeG9tPhcbi9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "PayableExample.sol:PayableExample",
								"label": "recipient",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"PayableExample.sol": {
				"ast": {
					"absolutePath": "PayableExample.sol",
					"exportedSymbols": {
						"PayableExample": [
							40
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "PayableExample",
							"nameLocation": "65:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "102:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "86:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "86:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "131:48:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "141:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "161:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "161:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "153:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 7,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "153:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "153:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "141:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "141:31:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:0:0"
									},
									"scope": 40,
									"src": "117:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "230:2:0",
										"statements": []
									},
									"functionSelector": "a3912ec8",
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveEther",
									"nameLocation": "198:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:0:0"
									},
									"scope": 40,
									"src": "189:43:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "308:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 26,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "333:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PayableExample_$40",
																	"typeString": "contract PayableExample"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_PayableExample_$40",
																	"typeString": "contract PayableExample"
																}
															],
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 24,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "325:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "325:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "325:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 23,
												"id": 29,
												"nodeType": "Return",
												"src": "318:28:0"
											}
										]
									},
									"functionSelector": "36f40c61",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "queryBalance",
									"nameLocation": "266:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "303:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "303:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "302:6:0"
									},
									"scope": 40,
									"src": "257:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "448:144:0",
										"statements": []
									},
									"id": 35,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:0"
									},
									"scope": 40,
									"src": "421:171:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "688:169:0",
										"statements": []
									},
									"id": 39,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:0"
									},
									"scope": 40,
									"src": "660:197:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 41,
							"src": "56:803:0",
							"usedErrors": []
						}
					],
					"src": "32:827:0"
				},
				"id": 0
			}
		}
	}
}